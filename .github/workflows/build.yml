name: Java CI with Maven and Docker Compose  # Nome do workflow

on:
  push:
    branches: [main]  # Executa no push na branch main
  pull_request:
    branches: [main]  # Executa em PRs para a main

jobs:
  build:
    runs-on: ubuntu-latest  # Define que o job vai rodar numa VM Ubuntu atualizada
    env:
      # Variáveis do banco que virão dos Secrets do GitHub
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      SPRING_DATASOURCE_MYSQL_ROOT_PASSWORD: ${{ secrets.SPRING_DATASOURCE_MYSQL_ROOT_PASSWORD }}

    steps:
      - name: Checkout repository  # Passo para baixar o código do repositório
        uses: actions/checkout@v3

      - name: Set up JDK 17  # Passo para configurar o JDK 17 na VM
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Define a versão do Java que será usada
          distribution: 'temurin'  # Define a distribuição do Java (Temurin é uma distribuição OpenJDK)

      - name: Build Docker image  # Passo que constrói a imagem Docker da aplicação
        run: docker build -t excel-batch-processing-springboot-mysql:latest .

      - name: Clean Docker volumes (opcional)  # Limpa volume para evitar dados corrompidos
        run: docker volume rm employee-excel-batch-processing-springboot-mysql_mysqldata || true

      - name: Start services with docker compose  # Sobe app e banco juntos
        run: |
          docker compose up --build -d

      - name: Wait for batch process to finish  # Passo que aguarda o processo batch finalizar
        run: |
          echo "Aguardando batch finalizar..."
          # Aguarda até o container app-1 parar de rodar
          until [ "$(docker inspect -f '{{.State.Running}}' app-1)" = "false" ]; do
            sleep 2
          done
          echo "Batch finalizado."

      - name: Show logs  # Exibe os logs de todos os serviços para ajudar na análise
        run: docker compose logs

      - name: Stop and remove containers  # Limpa tudo após o teste, incluindo volumes
        run: docker compose down -v || true